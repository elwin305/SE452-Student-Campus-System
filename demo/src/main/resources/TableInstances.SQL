DROP TABLE IF EXISTS ADMINS;
DROP TABLE IF EXISTS STUDENTS;
DROP TABLE IF EXISTS PROFESSORS;

-- Create base tables

CREATE TABLE ADMINS (
    ADMIN_ID int NOT NULL,
    FIRST_NAME VARCHAR(20),
    LAST_NAME VARCHAR(20),
    PRIMARY KEY (ADMIN_ID)
);

CREATE TABLE STUDENTS (
    STUDENT_ID int NOT NULL,
    FIRST_NAME VARCHAR(20),
    LAST_NAME VARCHAR(20),
    U_PASS INT,
    CREDITS_TAKEN INT,
    PRIMARY KEY (STUDENT_ID)
);

CREATE TABLE PROFESSORS (
    PROFESSOR_ID int NOT NULL,
    FIRST_NAME VARCHAR(20),
    LAST_NAME VARCHAR(20),
    PRIMARY KEY (PROFESSOR_ID)
);

CREATE TABLE COURSES (
    COURSE_ID INT,
    SHORT_NAME VARCHAR(10),
    NAME VARCHAR(50),
    DEPARTMENT VARCHAR(10),
    CREDITS INT,
    GRADUATE BIT,
    PRIMARY KEY (COURSE_ID)
);

CREATE TABLE CLASSES (
    CLASS_ID INT,
    COURSE_ID INT,
    PROFESSOR_ID INT,
    PRIMARY KEY (CLASS_ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSES (COURSE_ID),
    FOREIGN KEY (PROFESSOR_ID) REFERENCES PROFESSORS (PROFESSOR_ID)
);

CREATE TABLE GRADES (
    COURSE_ID INT,
    CLASS_ID INT,
    GRADES_EARNED FLOAT,
    STUDENT_ID INT,
    PRIMARY KEY (CLASS_ID, STUDENT_ID),
    FOREIGN KEY (CLASS_ID) REFERENCES CLASSES (CLASS_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENTS (STUDENT_ID)
);

CREATE TABLE ENROLLMENT (
    CLASS_ID INT,
    STUDENT_ID INT,
    PRIMARY KEY (CLASS_ID, STUDENT_ID),
    FOREIGN KEY (CLASS_ID) REFERENCES CLASSES (CLASS_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENTS (STUDENT_ID)
);

CREATE TABLE TUITION (
    TUITION_ID INT NOT NULL,
    STUDENT_ID INT,
    MONEY_DUE INT,
    QUARTER VARCHAR(10),
    PRIMARY KEY TUITION_ID,
    FOREIGN KEY STUDENT_ID REFERENCES STUDENTS (STUDENT_ID)
);

CREATE TABLE PAYMENTS (
    PAYMENT_ID INT NOT NULL,
    TUITION_ID INT,
    AMOUNT_PAID FLOAT,
    PRIMARY PAYMENT_ID,
    FOREIGN KEY TUITION_ID REFERENCES TUITION(TUITION_ID)
);

CREATE TABLE LOGIN (
    LOGIN_ID INT,
    PASSWORD VARCHAR(20),
    ACCESS_TYPE VARCHAR(20),
    STUDENT_ID INT,
    FOREIGN KEY STUDENT_ID REFERENCES STUDENTS(STUDENT_ID)
);